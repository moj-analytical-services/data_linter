{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "The Root Schema",
    "description": "The root schema comprises the entire JSON document.",
    "required": [
        "land-base-path",
        "fail-base-path",
        "pass-base-path",
        "log-base-path",
        "compress-data",
        "remove-tables-on-pass",
        "all-must-pass",
        "tables"
    ],
    "properties": {
        "timestamp-partition-name": {
            "$id": "#/properties/timestamp-partition-name",
            "type": "string",
            "title": "The timestamp-partition-name Schema",
            "description": "If you want to write your data out to be partitioned by timestamp give the name of partition column. Otherwise if null data is not partitioned by timestamp.",
            "default": null,
            "examples": [
                "mojap_land_time_stamp",
                "run_timestamp"
            ]
        },
        "validator-engine": {
            "$id": "#/properties/validator-engine",
            "type": "string",
            "title": "The validator-engine to use",
            "description": "If you want to use frictionless or great-expectations",
            "default": "frictionless",
            "examples": [
                "frictionless",
                "great-expectations"
            ],
            "enum": [
                "frictionless",
                "great-expectations"
            ]
        },
        "validator-engine-params": {
            "$id": "#/properties/validator-engine-params",
            "type": "object",
            "title": "Additional Parameters to pass to validator",
            "description": "Additional Parameters to pass to validator",
            "default": {}
        },
        "land-base-path": {
            "$id": "#/properties/land-base-path",
            "type": "string",
            "title": "The Land-base-path Schema",
            "description": "This is where data should arrive for a pipeline",
            "default": "",
            "pattern": "^s3://",
            "examples": [
                "s3://land-bucket/my-folder/"
            ]
        },
        "fail-base-path": {
            "$id": "#/properties/fail-base-path",
            "type": [
                "string",
                "null"
            ],
            "title": "The Fail-base-path Schema",
            "description": "Data which does not pass validation will end up here.",
            "default": "",
            "pattern": "^s3://",
            "examples": [
                "s3://fail-bucket/my-folder/"
            ]
        },
        "pass-base-path": {
            "$id": "#/properties/pass-base-path",
            "type": "string",
            "title": "The Pass-base-path Schema",
            "description": "Data which passes validation will end up here",
            "default": "",
            "pattern": "^s3://",
            "examples": [
                "s3://pass-bucket/my-folder/"
            ]
        },
        "log-base-path": {
            "$id": "#/properties/log-base-path",
            "type": "string",
            "title": "The Log-base-path Schema",
            "description": "This validation will produce detailed logs. They will be stored here.",
            "default": "",
            "pattern": "^s3://",
            "examples": [
                "s3://log-bucket/my-folder/"
            ]
        },
        "iam-role-name": {
            "$id": "#/properties/iam-role-name",
            "type": "string",
            "title": "The Iam-role-name Schema",
            "description": "The name of the iam role",
            "default": "",
            "examples": [
                "role-name"
            ]
        },
        "compress-data": {
            "$id": "#/properties/compress-data",
            "type": "boolean",
            "title": "The Compress-data Schema",
            "description": "Should data be compressed when moving",
            "default": false,
            "examples": [
                true
            ]
        },
        "remove-tables-on-pass": {
            "$id": "#/properties/remove-tables-on-pass",
            "type": "boolean",
            "title": "The Remove-tables-on-pass Schema",
            "description": "Delete table if it passes validation",
            "default": false,
            "examples": [
                true
            ]
        },
        "all-must-pass": {
            "$id": "#/properties/all-must-pass",
            "type": "boolean",
            "title": "The All-must-pass Schema",
            "description": "Only move data if all tables pass",
            "default": false,
            "examples": [
                true
            ]
        },
        "fail-unknown-files": {
            "$id": "#/properties/fail-unknown-files",
            "type": "object",
            "title": "The Fail-unknown-files Schema",
            "description": "If a file is not expected and not part of the exceptions list, fail validation",
            "default": {},
            "examples": [
                {
                    "exceptions": [
                        "additional_file.txt",
                        "another_additional_file.txt"
                    ]
                }
            ],
            "required": [
                "exceptions"
            ],
            "properties": {
                "exceptions": {
                    "$id": "#/properties/fail-unknown-files/properties/exceptions",
                    "type": "array",
                    "title": "The Exceptions Schema",
                    "description": "Exceptions to unknown files",
                    "default": [],
                    "items": {
                        "$id": "#/properties/fail-unknown-files/properties/exceptions/items",
                        "type": "string",
                        "title": "The Items Schema",
                        "description": "A list of exceptions",
                        "default": "",
                        "examples": [
                            "additional_file.txt",
                            "another_additional_file.txt"
                        ]
                    }
                }
            }
        },
        "tables": {
            "$id": "#/properties/tables",
            "type": "object",
            "minProperties": 1,
            "title": "The Tables Schema",
            "description": "A list of the tables you expect to see uploaded to land-base-path",
            "default": {},
            "items": {
                "$id": "#/properties/tables/items",
                "type": "object",
                "title": "The Items Schema",
                "description": "",
                "default": {},
                "required": [],
                "patternProperties": {
                    "^.*$": {
                        "$id": "#/properties/tables/items/properties/table1",
                        "type": "object",
                        "title": "The Table Schema",
                        "description": "Table arguments",
                        "default": {},
                        "examples": [
                            {
                                "pattern": null,
                                "required": true,
                                "metadata": null
                            }
                        ],
                        "properties": {
                            "required": {
                                "$id": "#/properties/tables/items/properties/table1/properties/required",
                                "type": "boolean",
                                "title": "The Required Schema",
                                "description": "Is this table required",
                                "default": false,
                                "examples": [
                                    true
                                ]
                            },
                            "pattern": {
                                "$id": "#/properties/tables/items/properties/table1/properties/pattern",
                                "title": "The Pattern Schema",
                                "description": "The name of the file. If null assume file name is the same as the table name",
                                "default": null,
                                "examples": [
                                    null,
                                    "^table2"
                                ]
                            },
                            "metadata": {
                                "$id": "#/properties/tables/items/properties/table1/properties/metadata",
                                "type": "string",
                                "title": "The Metadata Schema",
                                "description": "Link to metadata. Needs updating, can this be null?",
                                "examples": [
                                    "table1"
                                ]
                            },
                            "row-limit": {
                                "$id": "#/properties/tables/items/properties/table1/properties/row-limit",
                                "type": "integer",
                                "title": "The row-limit Schema",
                                "description": "The number of rows to validate",
                                "examples": [
                                    10,
                                    1000
                                ]
                            },
                            "expect-header": {
                                "$id": "#/properties/tables/items/properties/table1/properties/expect-header",
                                "type": "boolean",
                                "title": "The expect-header Schema",
                                "description": "If the file is a csv, does it have headers? If true will take header names from the metadata",
                                "examples": [
                                    true,
                                    false
                                ]
                            },
                            "headers-ignore-case": {
                                "$id": "#/properties/tables/items/properties/table1/properties/expect-header",
                                "type": "boolean",
                                "title": "The headers-ignore-case Schema",
                                "description": "Set to ignore case of the header names. Linter will lowercase to match naming convention in metadata schemas. To be used in conjunction with expect-header = true",
                                "examples": [
                                    true,
                                    false
                                ]
                            },
                            "only-test-cols-in-metadata": {
                                "$id": "#/properties/tables/items/properties/table1/properties/only-test-cols-in-metadata",
                                "type": "boolean",
                                "title": "The only-test-cols-in-metadata Schema",
                                "description": "Set to avoid testing new cols and failing if all expected cols pass but new unknown columns also exist. Only for ge validator-engine.",
                                "examples": [
                                    true,
                                    false
                                ],
                                "default": false
                            },
                            "pandas-kwargs": {
                                "$id": "#/properties/tables/items/properties/table1/properties/pandas-kwargs",
                                "type": "object",
                                "title": "The pandas-kwargs Schema",
                                "description": "kwargs to pass to pandas when using Great Expectations parser",
                                "default": {}
                            }
                        }
                    }
                }
            }
        }
    }
}
